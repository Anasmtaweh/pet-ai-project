name: Backend Deployment

on:
  push:
    branches: [main]
    paths:
      - 'backend/**'
  workflow_dispatch:

env:
  ECR_REGISTRY: 257394484725.dkr.ecr.eu-north-1.amazonaws.com
  ECR_REPOSITORY: pet-ai-backend
  AWS_REGION: eu-north-1

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_REGISTRY


      - name: Build and push Docker image
        run: |
          docker build --no-cache -t $ECR_REGISTRY/$ECR_REPOSITORY:latest ./backend
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: 13.60.74.169
          port: 2222
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: ECR_REGISTRY,ECR_REPOSITORY,AWS_REGION,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY
          script: |
            set -e
            # Install AWS CLI if missing
            if ! command -v aws &> /dev/null; then
                sudo yum install -y awscli
            fi
            
            # Configure AWS credentials
            export AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID"
            export AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY"
            export AWS_REGION="$AWS_REGION"
            
            # Login to ECR
            aws ecr get-login-password --region $AWS_REGION | \
            docker login --username AWS --password-stdin $ECR_REGISTRY
            
            # Pull and run container
            docker pull $ECR_REGISTRY/$ECR_REPOSITORY:latest
            docker stop backend-container || true
            docker rm backend-container || true
            docker run -d \
            --name backend-container \
            --health-cmd="curl --fail http://localhost:3001/health || exit 1" \
            --health-interval=30s \
            --health-retries=3 \
            --health-start-period=10s \
            --restart=unless-stopped \
            -p 3001:3001 \
            -e NODE_ENV=production \
            -e OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            $ECR_REGISTRY/$ECR_REPOSITORY:latest